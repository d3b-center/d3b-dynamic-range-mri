#!/bin/bash

CONTAINER="[d3b-dynamic-range-mri]"
echo -e "$CONTAINER  Initiated"

###############################################################################
## Built to flywheel-v0 spec.
FLYWHEEL_BASE=/flywheel/v0
OUTPUT_DIR=$FLYWHEEL_BASE/output
im_DIR=$FLYWHEEL_BASE/input/MR_image
mask_DIR=$FLYWHEEL_BASE/input/head_mask
MANIFEST=$FLYWHEEL_BASE/manifest.json
# CONFIG_FILE=$FLYWHEEL_BASE/config.json

###############################################################################
## Configure the ENV
export USER=Flywheel

###############################################################################
## Execute the main processes
function jsonValue() {
KEY=$1
num=$2
awk -F"[,:}]" '{for(i=1;i<=NF;i++){if($i~/'$KEY'\042/){print $(i+1)}}}' | tr -d '"' | sed -n ${num}p
}

## get all user configurations
# if [[ -f $CONFIG_FILE ]]; then
#   echo "$CONTAINER  $CONFIG_FILE found. Loading config..."
#   output_fn="$(cat $CONFIG_FILE | jsonValue output_file_name)"

# else
#   echo "$CONTAINER  $CONFIG_FILE not found. Loading defaults from $MANIFEST..."
#   output_fn="$(cat $MANIFEST | jsonValue output_file_name default)"

# fi

## Find the input files
im_file=$(find $im_DIR/* -maxdepth 0 -type f -name "*.nii*")
mask_file=$(find $mask_DIR/* -maxdepth 0 -type f -name "*.nii*")

## If necessary input files are found, run the thing
if [[ -f $im_file ]] && \
   [[ -f $mask_file ]] ; then

  echo "$CONTAINER  Calculating dynamic range of the input file"
  python3 DR_estimation.py $im_file $mask_file

################# Finish up #################
  STATUS=$?
else
  echo "$CONTAINER  Input files not found!"
  exit 1
fi

# Check exit status
if [[ $STATUS == 0 ]]
  then
    echo -e "$CONTAINER  Done!"

  else
    echo "$CONTAINER  command returned a non-zero exit code = [$STATUS]."
    exit 1
fi

exit 0
